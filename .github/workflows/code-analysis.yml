name: Code Analysis

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Ex√©cution hebdomadaire le lundi √† 3h du matin
    - cron: '0 3 * * 1'

permissions:
  contents: read
  security-events: write

jobs:
  code-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint analysis
        run: npm run lint
        continue-on-error: true

      - name: Run TypeScript type checking
        run: npm run type-check
        continue-on-error: true

      - name: Run security audit
        run: npm run audit:security
        continue-on-error: true

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Run Semgrep analysis
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/owasp-top-ten
            p/javascript
            p/typescript
        continue-on-error: true

      - name: Generate analysis report
        run: |
          echo "# üìä Rapport d'Analyse de Code" > analysis-report.md
          echo "" >> analysis-report.md
          echo "**Date:** $(date)" >> analysis-report.md
          echo "" >> analysis-report.md

          echo "## üîç Outils Utilis√©s" >> analysis-report.md
          echo "- ESLint (linting)" >> analysis-report.md
          echo "- TypeScript (v√©rification de types)" >> analysis-report.md
          echo "- Security Audit (audit de s√©curit√©)" >> analysis-report.md
          echo "- npm audit (vuln√©rabilit√©s des d√©pendances)" >> analysis-report.md
          echo "- Semgrep (analyse de s√©curit√©)" >> analysis-report.md
          echo "" >> analysis-report.md

          echo "## üìà M√©triques" >> analysis-report.md
          echo "- Fichiers analys√©s: $(find . -name '*.ts' -o -name '*.vue' -o -name '*.js' | grep -v node_modules | wc -l)" >> analysis-report.md
          echo "- Lignes de code: $(find . -name '*.ts' -o -name '*.vue' -o -name '*.js' | grep -v node_modules | xargs wc -l | tail -1)" >> analysis-report.md
          echo "" >> analysis-report.md

          echo "## ‚úÖ Statut" >> analysis-report.md
          echo "L'analyse de code a √©t√© ex√©cut√©e avec succ√®s." >> analysis-report.md
          echo "Consultez les logs ci-dessus pour les d√©tails." >> analysis-report.md

      - name: Upload analysis report
        uses: actions/upload-artifact@v4
        with:
          name: code-analysis-report
          path: analysis-report.md

      - name: Comment PR with analysis results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            try {
              const fs = require('fs');
              const reportPath = 'analysis-report.md';
              
              if (fs.existsSync(reportPath)) {
                const report = fs.readFileSync(reportPath, 'utf8');
                
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: report
                });
                
                console.log('‚úÖ Rapport d\'analyse ajout√© avec succ√®s');
              }
            } catch (error) {
              console.log('‚ö†Ô∏è Impossible d\'ajouter le rapport:', error.message);
            }
