name: Deploy Web to OVH VPS

on:
  workflow_dispatch:
  workflow_run:
    workflows: ['Deploy to DockerHub']
    types: [completed]
    branches: [main]

jobs:
  deploy-web:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Deploy Web via Docker Compose
        uses: appleboy/ssh-action@v1.0.3
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
          API_SIRENE_URL: ${{ secrets.API_SIRENE_URL }}
          API_KEY: ${{ secrets.API_KEY }}
          API_SIRENE_KEY: ${{ secrets.API_SIRENE_KEY }}
          STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
          MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
          APP_ID: ${{ secrets.APP_ID }}
          MEASUREMENT_ID: ${{ secrets.MEASUREMENT_ID }}
          PORT: ${{ secrets.PORT }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          API_TIMEOUT: ${{ secrets.API_TIMEOUT }}
          API_RETRY_COUNT: ${{ secrets.API_RETRY_COUNT }}
          GOOGLE_CALLBACK_URL: ${{ secrets.GOOGLE_CALLBACK_URL }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.OVH_SSH_KEY }}
          port: 22
          envs: DOCKERHUB_USERNAME,DOCKERHUB_TOKEN,API_BASE_URL,API_SIRENE_URL,API_KEY,API_SIRENE_KEY,STORAGE_BUCKET,MESSAGING_SENDER_ID,APP_ID,MEASUREMENT_ID,PORT,NODE_ENV,API_TIMEOUT,API_RETRY_COUNT,GOOGLE_CALLBACK_URL,FIREBASE_API_KEY,FIREBASE_AUTH_DOMAIN,FIREBASE_PROJECT_ID,FIREBASE_STORAGE_BUCKET,FIREBASE_MESSAGING_SENDER_ID,FIREBASE_APP_ID,FIREBASE_MEASUREMENT_ID
          script: |
            set -e
            echo "🚀 Déploiement Web Benevoclic (Docker Compose)"

            mkdir -p ~/benevoclicWeb
            cd ~/benevoclicWeb

            cat > docker-compose.web.yml << 'EOL'
            services:
              web:
                image: ${DOCKERHUB_USERNAME}/benevoclic-web:latest
                container_name: benevoclic-web
                restart: always
                ports: ["${PORT}:${PORT}"]
                environment:
                  NODE_ENV: ${NODE_ENV}
                  PORT: ${PORT}
                  API_BASE_URL: ${API_BASE_URL}
                  API_SIRENE_URL: ${API_SIRENE_URL}
                  API_KEY: ${API_KEY}
                  API_SIRENE_KEY: ${API_SIRENE_KEY}
                  STORAGE_BUCKET: ${STORAGE_BUCKET}
                  MESSAGING_SENDER_ID: ${MESSAGING_SENDER_ID}
                  APP_ID: ${APP_ID}
                  MEASUREMENT_ID: ${MEASUREMENT_ID}
                  API_TIMEOUT: ${API_TIMEOUT}
                  API_RETRY_COUNT: ${API_RETRY_COUNT}
                  GOOGLE_CALLBACK_URL: ${GOOGLE_CALLBACK_URL}
                  FIREBASE_API_KEY: ${FIREBASE_API_KEY}
                  FIREBASE_AUTH_DOMAIN: ${FIREBASE_AUTH_DOMAIN}
                  FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
                  FIREBASE_STORAGE_BUCKET: ${FIREBASE_STORAGE_BUCKET}
                  FIREBASE_MESSAGING_SENDER_ID: ${FIREBASE_MESSAGING_SENDER_ID}
                  FIREBASE_APP_ID: ${FIREBASE_APP_ID}
                  FIREBASE_MEASUREMENT_ID: ${FIREBASE_MEASUREMENT_ID}
            networks:
              benevoclic-network:
                external: true
            EOL


            echo "🛑 Arrêt du service web"
            docker compose -f docker-compose.web.yml down || true


            echo "📥 Pull image"
            docker compose -f docker-compose.web.yml pull

            echo "🚀 Démarrage"
            docker compose -f docker-compose.web.yml up -d

            echo "⏳ Attente"
            sleep 10

            echo "✅ OK"
