name: Deploy to OVH VPS

on:
  workflow_dispatch:

jobs:
  deploy-to-ovh:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Production
        uses: appleboy/ssh-action@v1.0.3
        env:
          # Variables d'environnement de l'application
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
          API_SIRENE_URL: ${{ secrets.API_SIRENE_URL }}
          API_KEY: ${{ secrets.API_KEY }}
          API_SIRENE_KEY: ${{ secrets.API_SIRENE_KEY }}
          STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
          MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
          APP_ID: ${{ secrets.APP_ID }}
          MEASUREMENT_ID: ${{ secrets.MEASUREMENT_ID }}
          PORT: ${{ secrets.PORT }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          API_TIMEOUT: ${{ secrets.API_TIMEOUT }}
          API_RETRY_COUNT: ${{ secrets.API_RETRY_COUNT }}
          GOOGLE_CALLBACK_URL: ${{ secrets.GOOGLE_CALLBACK_URL }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.OVH_SSH_KEY }}
          port: 22
          envs: API_BASE_URL,API_SIRENE_URL,API_KEY,API_SIRENE_KEY,STORAGE_BUCKET,MESSAGING_SENDER_ID,APP_ID,MEASUREMENT_ID,PORT,NODE_ENV,API_TIMEOUT,API_RETRY_COUNT,GOOGLE_CALLBACK_URL,FIREBASE_API_KEY,FIREBASE_AUTH_DOMAIN,FIREBASE_PROJECT_ID,FIREBASE_STORAGE_BUCKET,FIREBASE_MESSAGING_SENDER_ID,FIREBASE_APP_ID,FIREBASE_MEASUREMENT_ID
          script: |
            set -e

            # Créer le répertoire si nécessaire
            mkdir -p ~/benevoclicWeb

            # Générer le fichier docker-compose.yml
            cat > ~/benevoclicWeb/docker-compose.yml << EOL
            services:
              app:
                image: ${{ secrets.DOCKERHUB_USERNAME }}/benevoclic-web:latest
                container_name: benevoclic-web
                restart: always
                ports:
                  - "\${PORT}:\${PORT}"
                environment:
                  API_BASE_URL: \${API_BASE_URL}
                  API_SIRENE_URL: \${API_SIRENE_URL}
                  API_KEY: \${API_KEY}
                  API_SIRENE_KEY: \${API_SIRENE_KEY}
                  STORAGE_BUCKET: \${STORAGE_BUCKET}
                  MESSAGING_SENDER_ID: \${MESSAGING_SENDER_ID}
                  APP_ID: \${APP_ID}
                  MEASUREMENT_ID: \${MEASUREMENT_ID}
                  PORT: \${PORT}
                  NODE_ENV: \${NODE_ENV}
                  API_TIMEOUT: \${API_TIMEOUT}
                  API_RETRY_COUNT: \${API_RETRY_COUNT}
                  GOOGLE_CALLBACK_URL: \${GOOGLE_CALLBACK_URL}
                  FIREBASE_API_KEY: \${FIREBASE_API_KEY}
                  FIREBASE_AUTH_DOMAIN: \${FIREBASE_AUTH_DOMAIN}
                  FIREBASE_PROJECT_ID: \${FIREBASE_PROJECT_ID}
                  FIREBASE_STORAGE_BUCKET: \${FIREBASE_STORAGE_BUCKET}
                  FIREBASE_MESSAGING_SENDER_ID: \${FIREBASE_MESSAGING_SENDER_ID}
                  FIREBASE_APP_ID: \${FIREBASE_APP_ID}
                  FIREBASE_MEASUREMENT_ID: \${FIREBASE_MEASUREMENT_ID}
                healthcheck:
                  test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:\${PORT}/"]
                  interval: 30s
                  timeout: 3s
                  retries: 3
                  start_period: 10s
            EOL

            # Déployer l'application
            cd ~/benevoclicWeb
            echo "Arrêt des conteneurs existants..."
            docker compose down || true

            echo "Suppression de l'image précédente..."
            docker image rm ${{ secrets.DOCKERHUB_USERNAME }}/benevoclic-web:latest || true

            echo "Téléchargement de la nouvelle image..."
            docker compose pull

            echo "Démarrage des nouveaux conteneurs..."
            docker compose up -d

            echo "✅ Déploiement terminé avec succès !"
